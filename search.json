[{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://oxford-pharmacoepi.github.io/omock/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Du. Author, maintainer. Marti Catala. Author. Edward Burn. Author. Nuria Mercade-Besora. Author. Xihang Chen. Author.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Du M, Catala M, Burn E, Mercade-Besora N, Chen X (2024). omock: Creation Mock Observational Medical Outcomes Partnership Common Data Model. R package version 0.2.0, https://github.com/ohdsi/omock, https://ohdsi.github.io/omock/.","code":"@Manual{,   title = {omock: Creation of Mock Observational Medical Outcomes Partnership Common Data Model},   author = {Mike Du and Marti Catala and Edward Burn and Nuria Mercade-Besora and Xihang Chen},   year = {2024},   note = {R package version 0.2.0, https://github.com/ohdsi/omock},   url = {https://ohdsi.github.io/omock/}, }"},{"path":"https://oxford-pharmacoepi.github.io/omock/index.html","id":"omock-","dir":"","previous_headings":"","what":"Creation of Mock Observational Medical Outcomes Partnership Common Data Model","title":"Creation of Mock Observational Medical Outcomes Partnership Common Data Model","text":"primary objective omock package generate mock OMOP CDM (Observational Medical Outcomes Partnership Common Data Model) data facilitating testing various packages within OMOPverse ecosystem.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Creation of Mock Observational Medical Outcomes Partnership Common Data Model","text":"can install development version omock using:","code":"# install.packages(\"devtools\") devtools::install_github(\"ohdsi/omock\")"},{"path":"https://oxford-pharmacoepi.github.io/omock/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Creation of Mock Observational Medical Outcomes Partnership Common Data Model","text":"omock can quickly make simple mock OMOP CDM data. first start making empty cdm reference. includes person observation tables (required) currently empty. empty cdm reference, can quickly add person table specific number individuals. can fill observation period table individuals.","code":"library(omopgenerics) library(omock) library(dplyr) cdm <- emptyCdmReference(cdmName = \"mock\") cdm$person %>%    glimpse() #> Rows: 0 #> Columns: 18 #> $ person_id                   <int>  #> $ gender_concept_id           <int>  #> $ year_of_birth               <int>  #> $ month_of_birth              <int>  #> $ day_of_birth                <int>  #> $ birth_datetime              <date>  #> $ race_concept_id             <int>  #> $ ethnicity_concept_id        <int>  #> $ location_id                 <int>  #> $ provider_id                 <int>  #> $ care_site_id                <int>  #> $ person_source_value         <chr>  #> $ gender_source_value         <chr>  #> $ gender_source_concept_id    <int>  #> $ race_source_value           <chr>  #> $ race_source_concept_id      <int>  #> $ ethnicity_source_value      <chr>  #> $ ethnicity_source_concept_id <int> cdm$observation_period %>%    glimpse() #> Rows: 0 #> Columns: 5 #> $ observation_period_id         <int>  #> $ person_id                     <int>  #> $ observation_period_start_date <date>  #> $ observation_period_end_date   <date>  #> $ period_type_concept_id        <int> cdm <- cdm %>%    omock::mockPerson(nPerson = 1000)  cdm$person %>%    glimpse() #> Rows: 1,000 #> Columns: 7 #> $ person_id            <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15… #> $ gender_concept_id    <dbl> 8507, 8532, 8532, 8532, 8507, 8507, 8532, 8532, 8… #> $ year_of_birth        <dbl> 1997, 1963, 1986, 1978, 1973, 1961, 1986, 1981, 1… #> $ month_of_birth       <dbl> 8, 1, 3, 11, 3, 2, 12, 9, 7, 6, 1, 10, 1, 3, 7, 1… #> $ day_of_birth         <dbl> 22, 27, 10, 8, 2, 1, 16, 5, 23, 2, 17, 13, 24, 20… #> $ race_concept_id      <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ ethnicity_concept_id <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… cdm <- cdm %>%    omock::mockObservationPeriod()  cdm$observation_period %>%    glimpse() #> Rows: 1,000 #> Columns: 5 #> $ observation_period_id         <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1… #> $ person_id                     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1… #> $ observation_period_start_date <date> 2000-06-03, 1999-04-05, 2015-01-15, 198… #> $ observation_period_end_date   <date> 2013-06-29, 2003-06-15, 2015-10-11, 201… #> $ period_type_concept_id        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmFromTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a mock CDM (Common Data Model) object based on existing CDM structures and additional tables. — mockCdmFromTables","title":"Generates a mock CDM (Common Data Model) object based on existing CDM structures and additional tables. — mockCdmFromTables","text":"function takes existing CDM reference (can empty) list additional named tables create complete mock CDM object. ensures provided observations fit within respective observation periods individual records consistent entries person table. useful creating reliable realistic healthcare data simulations development testing within OMOP CDM framework.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmFromTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a mock CDM (Common Data Model) object based on existing CDM structures and additional tables. — mockCdmFromTables","text":"","code":"mockCdmFromTables(cdm = mockCdmReference(), tables = list(), seed = NULL)"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmFromTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a mock CDM (Common Data Model) object based on existing CDM structures and additional tables. — mockCdmFromTables","text":"cdm `cdm_reference` object, serves base structure additional tables integrated. parameter already initialized can contain pre-existing standard cohort-specific OMOP tables. tables named list data frames representing additional tables integrated CDM. tables can include standard OMOP tables 'drug_exposure' 'condition_occurrence', well cohort-specific tables part standard OMOP model necessary specific analyses. table named according intended table name CDM structure. seed optional integer sets seed random number generation used creating mock data entries. Setting seed ensures generated mock data reproducible across different runs function. 'NULL', seed set, leading non-deterministic behavior data generation.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmFromTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a mock CDM (Common Data Model) object based on existing CDM structures and additional tables. — mockCdmFromTables","text":"Returns updated `cdm` object new tables added integrated, ensuring consistency         across observational periods person entries.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmFromTables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a mock CDM (Common Data Model) object based on existing CDM structures and additional tables. — mockCdmFromTables","text":"","code":"# \\donttest{ library(omock) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # Create a mock cohort table cohort <- tibble(   cohort_definition_id = c(1, 1, 2, 2, 1, 3, 3, 3, 1, 3),   subject_id = c(1, 4, 2, 3, 5, 5, 4, 3, 3, 1),   cohort_start_date = as.Date(c(     \"2020-04-01\", \"2021-06-01\", \"2022-05-22\", \"2010-01-01\", \"2019-08-01\",     \"2019-04-07\", \"2021-01-01\", \"2008-02-02\", \"2009-09-09\", \"2021-01-01\"   )),   cohort_end_date = cohort_start_date )  # Generate a mock CDM from preexisting CDM structure and cohort table cdm <- mockCdmFromTables(cdm = mockCdmReference(), tables = list(cohort = cohort))  # Access the newly integrated cohort table and the standard person table in the CDM print(cdm$cohort) #> # A tibble: 10 × 4 #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <dbl>      <dbl> <date>            <date>          #>  1                    1          1 2020-04-01        2020-04-01      #>  2                    1          4 2021-06-01        2021-06-01      #>  3                    2          2 2022-05-22        2022-05-22      #>  4                    2          3 2010-01-01        2010-01-01      #>  5                    1          5 2019-08-01        2019-08-01      #>  6                    3          5 2019-04-07        2019-04-07      #>  7                    3          4 2021-01-01        2021-01-01      #>  8                    3          3 2008-02-02        2008-02-02      #>  9                    1          3 2009-09-09        2009-09-09      #> 10                    3          1 2021-01-01        2021-01-01      print(cdm$person) #> # A tibble: 5 × 18 #>   person_id gender_concept_id year_of_birth month_of_birth day_of_birth #> *     <dbl>             <dbl>         <dbl>          <dbl>        <int> #> 1         1              8507          2011             11           18 #> 2         2              8532          2010             11            8 #> 3         3              8507          1989              7           24 #> 4         4              8507          2013              8           21 #> 5         5              8532          2012              5            9 #> # ℹ 13 more variables: birth_datetime <date>, race_concept_id <dbl>, #> #   ethnicity_concept_id <dbl>, location_id <dbl>, person_source_value <chr>, #> #   gender_source_value <chr>, gender_source_concept_id <int>, #> #   race_source_value <chr>, race_source_concept_id <int>, #> #   ethnicity_source_value <chr>, ethnicity_source_concept_id <int>, #> #   provider_id <int>, care_site_id <int> # }"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmReference.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an empty CDM (Common Data Model) reference for a mock database. — mockCdmReference","title":"Creates an empty CDM (Common Data Model) reference for a mock database. — mockCdmReference","text":"function initializes empty CDM reference specified name populates mock vocabulary tables based provided vocabulary set. particularly useful setting simulated environment testing development purposes within OMOP CDM framework.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmReference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an empty CDM (Common Data Model) reference for a mock database. — mockCdmReference","text":"","code":"mockCdmReference(cdmName = \"mock database\", vocabularySet = \"mock\")"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmReference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an empty CDM (Common Data Model) reference for a mock database. — mockCdmReference","text":"cdmName character string specifying name CDM object created. name can used identify CDM object within larger simulation testing framework. Default \"mock database\". vocabularySet character string specifies name vocabulary set used creating vocabulary tables CDM. allows customization vocabulary match specific testing scenarios. Default \"mock\".","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmReference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an empty CDM (Common Data Model) reference for a mock database. — mockCdmReference","text":"Returns CDM object initially empty includes mock vocabulary tables.         object structure compliant OMOP CDM standards, making suitable         population mock data like person, visit, observation records.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCdmReference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an empty CDM (Common Data Model) reference for a mock database. — mockCdmReference","text":"","code":"library(omock)  # Create a new empty mock CDM reference cdm <- mockCdmReference()  # Display the structure of the newly created CDM print(cdm) #>  #> ── # OMOP CDM reference (local) of mock database ─────────────────────────────── #> • omop tables: person, observation_period, cdm_source, concept, vocabulary, #> concept_relationship, concept_synonym, concept_ancestor, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: -"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCohort.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Synthetic Cohort — mockCohort","title":"Generate Synthetic Cohort — mockCohort","text":"function generates synthetic cohort data adds given CDM (Common Data Model) reference. allows creating multiple cohorts specified properties simulates frequency observations individuals.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Synthetic Cohort — mockCohort","text":"","code":"mockCohort(   cdm,   name = \"cohort\",   numberCohorts = 1,   cohortName = paste0(\"cohort_\", seq_len(numberCohorts)),   recordPerson = 1,   seed = 1 )"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Synthetic Cohort — mockCohort","text":"cdm CDM reference object synthetic cohort data stored. object already include necessary tables `person` `observation_period`. name string specifying name table within CDM cohort data stored. Defaults \"cohort\". name used reference new table CDM. numberCohorts integer specifying number different cohorts create within table. Defaults 1. parameter allows creation multiple cohorts, unique identifier. cohortName character vector specifying names cohorts created. provided, default names based sequence (e.g., \"cohort_1\", \"cohort_2\", ...) generated. length vector must match value `numberCohorts`. parameter provides meaningful names cohort. recordPerson integer vector integers specifying expected number records per person within cohort. single integer provided, applies cohorts. vector provided, length must match value `numberCohorts`. parameter helps simulate frequency observations individuals cohort, allowing realistic variability data. seed integer specifying random seed reproducibility generated data. Setting seed ensures synthetic data can generated , facilitating consistent results across different runs.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCohort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Synthetic Cohort — mockCohort","text":"CDM reference object mock cohort tables added. new table contain synthetic data representing specified cohorts, set observation records.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockCohort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Synthetic Cohort — mockCohort","text":"","code":"library(omock) cdm <- mockCdmReference() |>   mockPerson(nPerson = 100) |>   mockObservationPeriod() |>   mockCohort(     name = \"omock_example\",     numberCohorts = 2,     cohortName = c(\"omock_cohort_1\", \"omock_cohort_2\")   )  cdm #>  #> ── # OMOP CDM reference (local) of mock database ─────────────────────────────── #> • omop tables: person, observation_period, cdm_source, concept, vocabulary, #> concept_relationship, concept_synonym, concept_ancestor, drug_strength #> • cohort tables: omock_example #> • achilles tables: - #> • other tables: -"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConcepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds mock concept data to a concept table within a Common Data Model (CDM) object. — mockConcepts","title":"Adds mock concept data to a concept table within a Common Data Model (CDM) object. — mockConcepts","text":"function inserts new concept entries specified domain within concept table CDM object. supports four domains: Condition, Drug, Measurement, Observation. Existing entries concept IDs overwritten, caution used adding data prevent unintended data loss.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConcepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds mock concept data to a concept table within a Common Data Model (CDM) object. — mockConcepts","text":"","code":"mockConcepts(cdm, conceptSet, domain = \"Condition\", seed = 1)"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConcepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds mock concept data to a concept table within a Common Data Model (CDM) object. — mockConcepts","text":"cdm CDM object represents common data model containing least concept table. object modified -place include new updated concept entries. conceptSet numeric vector concept IDs added updated concept table. IDs unique within context provided domain avoid unintended overwriting unless intended effect. domain character string specifying domain concepts added. accepts \"Condition\", \"Drug\", \"Measurement\", \"Observation\". defines category concepts fall affects vocabulary used . seed optional integer value used set random seed generating reproducible concept attributes like `vocabulary_id` `concept_class_id`. Useful testing consistent output required.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConcepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds mock concept data to a concept table within a Common Data Model (CDM) object. — mockConcepts","text":"Returns modified CDM object updated concept table reflecting newly added concepts.         function directly modifies provided CDM object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConcepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds mock concept data to a concept table within a Common Data Model (CDM) object. — mockConcepts","text":"","code":"library(omock) library(dplyr)  # Create a mock CDM reference and add concepts in the 'Condition' domain cdm <- mockCdmReference() |> mockConcepts(conceptSet = c(100, 200), domain = \"Condition\")  # View the updated concept entries for the 'Condition' domain cdm$concept |> filter(domain_id == \"Condition\") #> # A tibble: 14 × 10 #>    concept_id concept_name              domain_id vocabulary_id standard_concept #>         <dbl> <chr>                     <chr>     <chr>         <chr>            #>  1          1 Musculoskeletal disorder  Condition SNOMED        S                #>  2          2 Osteoarthrosis            Condition SNOMED        S                #>  3          3 Arthritis                 Condition SNOMED        S                #>  4          4 Osteoarthritis of knee    Condition SNOMED        S                #>  5          5 Osteoarthritis of hip     Condition SNOMED        S                #>  6          6 Osteonecrosis             Condition SNOMED        S                #>  7          7 Degenerative arthropathy  Condition Read          NA               #>  8          8 Knee osteoarthritis       Condition Read          NA               #>  9         15 Diseases of the musculos… Condition ICD10         NA               #> 10         16 Arthropathies             Condition ICD10         NA               #> 11         17 Arthritis                 Condition ICD10         NA               #> 12         18 OA                        Condition ICD10         NA               #> 13        100 Condition_100             Condition SNOMED        S                #> 14        200 Condition_200             Condition SNOMED        S                #> # ℹ 5 more variables: concept_class_id <chr>, concept_code <chr>, #> #   valid_start_date <chr>, valid_end_date <chr>, invalid_reason <chr>"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConditionOccurrence.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a mock condition occurrence table and integrates it into an existing CDM object. — mockConditionOccurrence","title":"Generates a mock condition occurrence table and integrates it into an existing CDM object. — mockConditionOccurrence","text":"function simulates condition occurrences individuals within specified cohort. helps create realistic dataset generating condition records person, based number records specified per person. generated data aligned existing observation periods ensure conditions recorded within valid observation windows.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConditionOccurrence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a mock condition occurrence table and integrates it into an existing CDM object. — mockConditionOccurrence","text":"","code":"mockConditionOccurrence(cdm, recordPerson = 1, seed = 1)"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConditionOccurrence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a mock condition occurrence table and integrates it into an existing CDM object. — mockConditionOccurrence","text":"cdm `cdm_reference` object already include 'person', 'observation_period', 'concept' tables. object base CDM structure condition occurrence data added. essential tables empty provide necessary context generating condition data. recordPerson integer specifying expected number condition records generate per person. parameter allows simulation varying frequencies condition occurrences among individuals cohort, reflecting variability seen real-world medical data. seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, allows function produce results time run inputs. 'NULL', seed set, resulting different outputs run.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConditionOccurrence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a mock condition occurrence table and integrates it into an existing CDM object. — mockConditionOccurrence","text":"Returns modified `cdm` object new 'condition_occurrence' table added. table includes simulated         condition data person, ensuring record within valid observation periods linked correct         individuals 'person' table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockConditionOccurrence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a mock condition occurrence table and integrates it into an existing CDM object. — mockConditionOccurrence","text":"","code":"# \\donttest{ library(omock)  # Create a mock CDM reference and add condition occurrences cdm <- mockCdmReference() |> mockPerson() |> mockObservationPeriod() |>       mockConditionOccurrence(recordPerson = 2)  # View the generated condition occurrence data print(cdm$condition_occurrence) #> # A tibble: 240 × 6 #>    condition_concept_id person_id condition_start_date condition_end_date #>  *                <dbl>     <int> <date>               <date>             #>  1                    1         9 1986-02-12           1998-04-06         #>  2                    1         4 1992-08-23           2000-06-16         #>  3                    1         7 2014-03-15           2014-03-27         #>  4                    1         1 2001-08-06           2006-04-13         #>  5                    1         2 2000-01-09           2001-08-13         #>  6                    1         7 2014-03-09           2014-03-20         #>  7                    1         2 2000-01-17           2001-07-25         #>  8                    1         3 2015-02-08           2015-06-24         #>  9                    1         1 2004-03-11           2005-05-20         #> 10                    1         5 2012-05-19           2012-06-29         #> # ℹ 230 more rows #> # ℹ 2 more variables: condition_occurrence_id <int>, #> #   condition_type_concept_id <dbl> # }"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDeath.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a mock death table and integrates it into an existing CDM object. — mockDeath","title":"Generates a mock death table and integrates it into an existing CDM object. — mockDeath","text":"function simulates death records individuals within specified cohort. creates realistic dataset generating death records according specified number records per person. function ensures death record associated valid person within observation period maintain integrity data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDeath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a mock death table and integrates it into an existing CDM object. — mockDeath","text":"","code":"mockDeath(cdm, recordPerson = 1, seed = 1)"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDeath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a mock death table and integrates it into an existing CDM object. — mockDeath","text":"cdm `cdm_reference` object must already include 'person' 'observation_period' tables. object base CDM structure death data added. essential 'person' 'observation_period' tables populated provide necessary context generating death records. recordPerson integer specifying expected number death records generate per person. parameter helps simulate varying frequencies death occurrences among individuals cohort, reflecting variability seen real-world medical data. Typically, set 1 0, assuming datasets record single death date per individual . seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, allows function produce results time run inputs. 'NULL', seed set, can result different outputs run.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDeath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a mock death table and integrates it into an existing CDM object. — mockDeath","text":"Returns modified `cdm` object new 'death' table added. table includes simulated         death data person, ensuring record linked correctly individuals 'person' table         falls within valid observation periods.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDeath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a mock death table and integrates it into an existing CDM object. — mockDeath","text":"","code":"# \\donttest{ library(omock)  # Create a mock CDM reference and add death records cdm <- mockCdmReference() |> mockPerson() |> mockObservationPeriod() |>       mockDeath(recordPerson = 1)  # View the generated death data print(cdm$death) #> # A tibble: 10 × 3 #>    person_id death_date death_type_concept_id #>  *     <int> <date>                     <dbl> #>  1         9 2009-09-17                     1 #>  2         4 2013-12-31                     1 #>  3         7 2014-04-09                     1 #>  4         1 2013-06-29                     1 #>  5         2 2003-06-15                     1 #>  6         5 2013-02-10                     1 #>  7         3 2015-10-11                     1 #>  8        10 2019-12-26                     1 #>  9         6 2015-04-15                     1 #> 10         8 2009-03-10                     1 # }"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDrugExposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a mock drug exposure table and integrates it into an existing CDM object. — mockDrugExposure","title":"Generates a mock drug exposure table and integrates it into an existing CDM object. — mockDrugExposure","text":"function simulates drug exposure records individuals within specified cohort. creates realistic dataset generating drug exposure records based specified number records per person. drug exposure record correctly associated individual within valid observation periods, ensuring integrity data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDrugExposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a mock drug exposure table and integrates it into an existing CDM object. — mockDrugExposure","text":"","code":"mockDrugExposure(cdm, recordPerson = 1, seed = 1)"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDrugExposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a mock drug exposure table and integrates it into an existing CDM object. — mockDrugExposure","text":"cdm `cdm_reference` object must already include 'person' 'observation_period' tables. object serves base CDM structure drug exposure data added. 'person' 'observation_period' tables must populated necessary generating accurate drug exposure records. recordPerson integer specifying expected number drug exposure records generate per person. parameter allows simulation varying drug usage frequencies among individuals cohort, reflecting real-world variability medication administration. seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, seed enables function produce consistent results time run inputs. 'NULL', seed set, can lead different outputs run.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDrugExposure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a mock drug exposure table and integrates it into an existing CDM object. — mockDrugExposure","text":"Returns modified `cdm` object new 'drug_exposure' table added. table includes simulated         drug exposure data person, ensuring record correctly linked individuals 'person' table         falls within valid observation periods.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockDrugExposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a mock drug exposure table and integrates it into an existing CDM object. — mockDrugExposure","text":"","code":"library(omock)  # Create a mock CDM reference and add drug exposure records cdm <- mockCdmReference() |> mockPerson() |> mockObservationPeriod() |>       mockDrugExposure(recordPerson = 3)  # View the generated drug exposure data print(cdm$drug_exposure) #> # A tibble: 180 × 6 #>    drug_concept_id person_id drug_exposure_start_date drug_exposure_end_date #>  *           <dbl>     <int> <date>                   <date>                 #>  1              10         9 1991-07-23               1995-03-08             #>  2              10         4 1994-10-23               2003-10-24             #>  3              10         7 2014-03-15               2014-03-22             #>  4              10         1 2002-04-13               2004-12-14             #>  5              10         2 1999-12-08               2001-02-27             #>  6              10         7 2014-03-13               2014-03-26             #>  7              10         2 1999-04-22               2002-11-26             #>  8              10         3 2015-03-01               2015-05-28             #>  9              10         1 2002-08-13               2005-10-05             #> 10              10         5 2012-05-16               2012-09-02             #> # ℹ 170 more rows #> # ℹ 2 more variables: drug_exposure_id <int>, drug_type_concept_id <dbl>"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockMeasurement.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a mock measurement table and integrates it into an existing CDM object. — mockMeasurement","title":"Generates a mock measurement table and integrates it into an existing CDM object. — mockMeasurement","text":"function simulates measurement records individuals within specified cohort. creates realistic dataset generating measurement records based specified number records per person. measurement record correctly associated individual within valid observation periods, ensuring integrity data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockMeasurement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a mock measurement table and integrates it into an existing CDM object. — mockMeasurement","text":"","code":"mockMeasurement(cdm, recordPerson = 1, seed = 1)"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockMeasurement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a mock measurement table and integrates it into an existing CDM object. — mockMeasurement","text":"cdm `cdm_reference` object must already include 'person' 'observation_period' tables. object serves base CDM structure measurement data added. 'person' 'observation_period' tables must populated necessary generating accurate measurement records. recordPerson integer specifying expected number measurement records generate per person. parameter allows simulation varying frequencies health measurements among individuals cohort, reflecting real-world variability patient monitoring diagnostic testing. seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, seed enables function produce consistent results time run inputs. 'NULL', seed set, can lead different outputs run.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockMeasurement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a mock measurement table and integrates it into an existing CDM object. — mockMeasurement","text":"Returns modified `cdm` object new 'measurement' table added. table includes simulated         measurement data person, ensuring record correctly linked individuals 'person' table         falls within valid observation periods.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockMeasurement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a mock measurement table and integrates it into an existing CDM object. — mockMeasurement","text":"","code":"library(omock)  # Create a mock CDM reference and add measurement records cdm <- mockCdmReference() |> mockPerson() |> mockObservationPeriod() |>       mockMeasurement(recordPerson = 5)  # View the generated measurement data print(cdm$measurement) #> # A tibble: 50 × 5 #>    measurement_concept_id person_id measurement_date measurement_id #>  *                  <dbl>     <int> <date>                    <int> #>  1                3020630         9 1990-04-13                    1 #>  2                3020630         4 1992-11-14                    2 #>  3                3020630         7 2014-03-11                    3 #>  4                3020630         1 2004-05-03                    4 #>  5                3020630         2 1999-05-18                    5 #>  6                3020630         7 2014-03-14                    6 #>  7                3020630         2 1999-08-28                    7 #>  8                3020630         3 2015-03-12                    8 #>  9                3020630         1 2001-09-12                    9 #> 10                3020630         5 2012-05-05                   10 #> # ℹ 40 more rows #> # ℹ 1 more variable: measurement_type_concept_id <dbl>"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a mock observation table and integrates it into an existing CDM object. — mockObservation","title":"Generates a mock observation table and integrates it into an existing CDM object. — mockObservation","text":"function simulates observation records individuals within specified cohort. creates realistic dataset generating observation records based specified number records per person. observation record correctly associated individual within valid observation periods, ensuring integrity data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a mock observation table and integrates it into an existing CDM object. — mockObservation","text":"","code":"mockObservation(cdm, recordPerson = 1, seed = 1)"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a mock observation table and integrates it into an existing CDM object. — mockObservation","text":"cdm `cdm_reference` object must already include 'person', 'observation_period', 'concept' tables. object serves base CDM structure observation data added. 'person' 'observation_period' tables must populated necessary generating accurate observation records. recordPerson integer specifying expected number observation records generate per person. parameter allows simulation varying frequencies healthcare observations among individuals cohort, reflecting real-world variability patient monitoring health assessments. seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, seed enables function produce consistent results time run inputs. 'NULL', seed set, can lead different outputs run.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a mock observation table and integrates it into an existing CDM object. — mockObservation","text":"Returns modified `cdm` object new 'observation' table added. table includes simulated         observation data person, ensuring record correctly linked individuals 'person' table         falls within valid observation periods.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a mock observation table and integrates it into an existing CDM object. — mockObservation","text":"","code":"library(omock)  # Create a mock CDM reference and add observation records cdm <- mockCdmReference() |> mockPerson() |> mockObservationPeriod() |>       mockObservation(recordPerson = 3)  # View the generated observation data print(cdm$observation) #> # A tibble: 30 × 5 #>    observation_concept_id person_id observation_date observation_id #>  *                  <dbl>     <int> <date>                    <int> #>  1                      9         9 1991-07-23                    1 #>  2                      9         4 1994-10-23                    2 #>  3                      9         7 2014-03-15                    3 #>  4                      9         1 2002-04-13                    4 #>  5                      9         2 1999-12-08                    5 #>  6                      9         7 2014-03-13                    6 #>  7                      9         2 1999-04-22                    7 #>  8                      9         3 2015-03-01                    8 #>  9                      9         1 2002-08-13                    9 #> 10                      9         5 2012-05-16                   10 #> # ℹ 20 more rows #> # ℹ 1 more variable: observation_type_concept_id <dbl>"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservationPeriod.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a mock observation period table and integrates it into an existing CDM object. — mockObservationPeriod","title":"Generates a mock observation period table and integrates it into an existing CDM object. — mockObservationPeriod","text":"function simulates observation periods individuals based date birth recorded 'person' table CDM object. assigns random start end dates observation period within realistic timeframe specified default maximum date.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservationPeriod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a mock observation period table and integrates it into an existing CDM object. — mockObservationPeriod","text":"","code":"mockObservationPeriod(cdm, seed = 1)"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservationPeriod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a mock observation period table and integrates it into an existing CDM object. — mockObservationPeriod","text":"cdm `cdm_reference` object must include 'person' table valid dates birth. object serves base CDM structure observation period data added. function checks ensure 'person' table populated uses date birth generate observation periods. seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, seed allows function produce consistent results time run inputs. 'NULL', seed set, can lead different outputs run.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservationPeriod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a mock observation period table and integrates it into an existing CDM object. — mockObservationPeriod","text":"Returns modified `cdm` object new 'observation_period' table added. table includes simulated         observation periods person, ensuring record spans realistic timeframe based person's date birth.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockObservationPeriod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a mock observation period table and integrates it into an existing CDM object. — mockObservationPeriod","text":"","code":"library(omock)  # Create a mock CDM reference and add observation periods cdm <- mockCdmReference() |>   mockPerson(nPerson = 100) |>   mockObservationPeriod()  # View the generated observation period data print(cdm$observation_period) #> # A tibble: 100 × 5 #>    observation_period_id person_id observation_period_s…¹ observation_period_e…² #>  *                 <int>     <int> <date>                 <date>                 #>  1                     1         1 2000-06-03             2013-06-29             #>  2                     2         2 1999-04-05             2003-06-15             #>  3                     3         3 2015-01-15             2015-10-11             #>  4                     4         4 1989-12-09             2013-12-31             #>  5                     5         5 2012-03-18             2013-02-10             #>  6                     6         6 2010-11-13             2015-04-15             #>  7                     7         7 2014-03-04             2014-04-09             #>  8                     8         8 1984-10-07             2009-03-10             #>  9                     9         9 1985-12-16             2009-09-17             #> 10                    10        10 2019-11-23             2019-12-26             #> # ℹ 90 more rows #> # ℹ abbreviated names: ¹​observation_period_start_date, #> #   ²​observation_period_end_date #> # ℹ 1 more variable: period_type_concept_id <lgl>"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockPerson.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a mock person table and integrates it into an existing CDM object. — mockPerson","title":"Generates a mock person table and integrates it into an existing CDM object. — mockPerson","text":"function creates mock person table specified characteristics individual, including randomly assigned date birth within given range gender based specified proportions. populates CDM object's person table entries, ensuring record uniquely identified.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockPerson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a mock person table and integrates it into an existing CDM object. — mockPerson","text":"","code":"mockPerson(   cdm = mockCdmReference(),   nPerson = 10,   birthRange = as.Date(c(\"1950-01-01\", \"2000-12-31\")),   proportionFemale = 0.5,   seed = 1 )"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockPerson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a mock person table and integrates it into an existing CDM object. — mockPerson","text":"cdm `cdm_reference` object serves base structure adding person table. parameter existing newly created CDM object yet contain 'person' table. nPerson integer specifying number mock persons create person table. defines scale simulation allows creation datasets varying sizes. birthRange date range within birthdays mock persons randomly generated. provided vector two dates (`.Date` format), specifying start end range. proportionFemale numeric value 0 1 indicating proportion persons female. example, value 0.5 means approximately 50 generated persons female. helps simulate realistic demographic distributions. seed optional integer used set seed random number generation, ensuring reproducibility generated data. provided, seed allows function produce consistent results time run inputs. 'NULL', seed set, can lead different outputs run.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockPerson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a mock person table and integrates it into an existing CDM object. — mockPerson","text":"modified `cdm` object new 'person' table added. table includes simulated         person data generated individual, unique identifiers demographic attributes.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockPerson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a mock person table and integrates it into an existing CDM object. — mockPerson","text":"","code":"# \\donttest{ library(omock) cdm <- mockPerson(cdm = mockCdmReference(), nPerson = 10)  # View the generated person data print(cdm$person) #> # A tibble: 10 × 7 #>    person_id gender_concept_id year_of_birth month_of_birth day_of_birth #>  *     <int>             <dbl>         <dbl>          <dbl>        <dbl> #>  1         1              8507          1997              8           22 #>  2         2              8532          1963              1           27 #>  3         3              8532          1986              3           10 #>  4         4              8507          1978             11            8 #>  5         5              8532          1973              3            2 #>  6         6              8532          1961              2            1 #>  7         7              8507          1986             12           16 #>  8         8              8532          1981              9            5 #>  9         9              8507          1983              7           23 #> 10        10              8507          1998              6            2 #> # ℹ 2 more variables: race_concept_id <lgl>, ethnicity_concept_id <lgl> # }"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockVocabularyTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a mock CDM database populated with various vocabulary tables. — mockVocabularyTables","title":"Creates a mock CDM database populated with various vocabulary tables. — mockVocabularyTables","text":"function adds specified vocabulary tables CDM object. can either populate tables provided data frames initialize empty tables data provided. useful setting testing environment controlled vocabulary data.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockVocabularyTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a mock CDM database populated with various vocabulary tables. — mockVocabularyTables","text":"","code":"mockVocabularyTables(   cdm = mockCdmReference(),   vocabularySet = \"mock\",   cdmSource = NULL,   concept = NULL,   vocabulary = NULL,   conceptRelationship = NULL,   conceptSynonym = NULL,   conceptAncestor = NULL,   drugStrength = NULL )"},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockVocabularyTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a mock CDM database populated with various vocabulary tables. — mockVocabularyTables","text":"cdm `cdm_reference` object serves base structure adding vocabulary tables. existing newly created CDM object, typically initialized without vocabulary tables. vocabularySet character string specifies prefix set name used initialize mock data tables. allows customization source data structure names generating vocabulary tables. cdmSource optional data frame representing CDM source table. provided, used directly; otherwise, mock table generated based `vocabularySet` prefix. concept optional data frame representing concept table. provided, used directly; NULL, mock table generated. vocabulary optional data frame representing vocabulary table. provided, used directly; NULL, mock table generated. conceptRelationship optional data frame representing concept relationship table. provided, used directly; NULL, mock table generated. conceptSynonym optional data frame representing concept synonym table. provided, used directly; NULL, mock table generated. conceptAncestor optional data frame representing concept ancestor table. provided, used directly; NULL, mock table generated. drugStrength optional data frame representing drug strength table. provided, used directly; NULL, mock table generated.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockVocabularyTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a mock CDM database populated with various vocabulary tables. — mockVocabularyTables","text":"Returns modified `cdm` object new provided vocabulary tables added.","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/mockVocabularyTables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a mock CDM database populated with various vocabulary tables. — mockVocabularyTables","text":"","code":"library(omock)  # Create a mock CDM reference and populate it with mock vocabulary tables cdm <- mockCdmReference() |> mockVocabularyTables(vocabularySet = \"mock\")  # View the names of the tables added to the CDM names(cdm) #> [1] \"person\"               \"observation_period\"   \"cdm_source\"           #> [4] \"concept\"              \"vocabulary\"           \"concept_relationship\" #> [7] \"concept_synonym\"      \"concept_ancestor\"     \"drug_strength\""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/omock-package.html","id":null,"dir":"Reference","previous_headings":"","what":"omock: Creation of Mock Observational Medical Outcomes Partnership Common Data Model — omock-package","title":"omock: Creation of Mock Observational Medical Outcomes Partnership Common Data Model — omock-package","text":"Creates mock data testing package development Observational Medical Outcomes Partnership common data model. package offers functions crafted pipeline-friendly implementation, enabling users effortlessly include necessary tables testing needs.","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/omock-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"omock: Creation of Mock Observational Medical Outcomes Partnership Common Data Model — omock-package","text":"Maintainer: Mike Du mike.du@ndorms.ox.ac.uk (ORCID) Authors: Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID) Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) Nuria Mercade-Besora nuria.mercadebesora@ndorms.ox.ac.uk (ORCID) Xihang Chen xihang.chen@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics attrition, bind, cdmName, cdmSource, cdmVersion, cohortCount, dropTable, emptyCdmReference, insertTable, settings","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/news/index.html","id":"omock-020","dir":"Changelog","previous_headings":"","what":"omock 0.2.0","title":"omock 0.2.0","text":"CRAN release: 2024-05-20","code":""},{"path":"https://oxford-pharmacoepi.github.io/omock/news/index.html","id":"omock-010","dir":"Changelog","previous_headings":"","what":"omock 0.1.0","title":"omock 0.1.0","text":"CRAN release: 2024-03-08 Initial CRAN submission.","code":""}]
